package components

import (
	"thor/internal/models"
)

// Full Page

templ rawPage(title string) {
    <!DOCTYPE html>
    <html>
        <head>
            <title>{ title } | Thor</title>
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <link rel="icon" type="image/x-icon" href="/statics/favicon.ico">
            <script src="/statics/tailwind.js"></script>
            <script src="/statics/htmx.js"></script>
            <script src="/statics/htmx-ws.js"></script>
        </head>
        <body id="body" class="bg-slate-900 text-white max-w-4xl my-0 mx-auto">
            { children... }
        </body>
    </html>
}

templ popup() {
    <div class="fixed z-10 inset-0 overflow-y-auto">
        { children... }
    </div>
}

templ NotFoundPage() {
    @rawPage("Not Found") {
        <div class="w-full px-16 md:px-0 h-screen flex items-center justify-center">
            <div class="bg-white border border-gray-200 flex flex-col items-center justify-center px-4 md:px-8 lg:px-24 py-8 rounded-lg shadow-2xl">
                <p class="text-6xl md:text-7xl lg:text-9xl font-bold tracking-wider text-gray-300">404</p>
                <p class="text-2xl md:text-3xl lg:text-5xl font-bold tracking-wider text-gray-500 mt-4">Page Not Found</p>
                <p class="text-gray-500 mt-4 pb-4 border-b-2 text-center">Sorry, the page you are looking for could not be found.</p>
                <a href="/" class="flex items-center space-x-2 bg-blue-600 hover:bg-blue-700 text-gray-100 px-4 py-2 mt-6 rounded transition duration-150" title="Return Home">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd"></path>
                    </svg>
                    <span>Return Home</span>
                </a>
            </div>
        </div>
    }
}


templ ErrorPage() {
    @rawPage("Server Error") {
        <div class="w-full px-16 md:px-0 h-screen flex items-center justify-center">
            <div class="bg-white border border-gray-200 flex flex-col items-center justify-center px-4 md:px-8 lg:px-24 py-8 rounded-lg shadow-2xl">
                <p class="text-6xl md:text-7xl lg:text-9xl font-bold tracking-wider text-gray-300">500</p>
                <p class="text-2xl md:text-3xl lg:text-5xl font-bold tracking-wider text-gray-500 mt-4">Server Error</p>
                <p class="text-gray-500 mt-8 py-2 border-y-2 text-center">Whoops, something went wrong on our servers.</p>
            </div>
        </div>
    }
}

templ page(title string, breadcrumb, description string) {
    @rawPage(title) {
        <div class="px-4 sm:px-8 max-w-5xl m-auto">
            <div class="flex flex-col">
                <div class="flex flex-row justify-between items-center">
                    <a href="/" class="text-2xl">{breadcrumb}</a>
                </div>
                if description != "" {
                    <p class="mt-2 text-xs mb-4 text-gray-500">{description}</p>
                }
                <div class="mt-4">
                    { children... }
                </div>
            </div>
        </div>
    }
}

templ HomePage() {
    @page("Downloads", "Thor", "Download list") {
        <div hx-ext="ws" ws-connect="/downloads/ws" hx-target="downloads">
            <div id="downloads"></div>
            <div hx-get="/downloads/new" hx-target="#body" hx-swap="beforeend" class="mt-4 text-white text-center px-4 py-2 bg-blue-600 hover:bg-sky-100 hover:text-sky-900 border border-slate-600 rounded overflow-hidden shadow-md cursor-pointer">
                Add Download
            </div>
        </div>
    }
}

templ DownloadList(downloads []models.Download) {
    <div id="downloads">
        <ul class="border border-slate-600 rounded overflow-hidden shadow-md">
            if len(downloads) > 0 {
                for _, download := range downloads {
                    <li class="px-4 py-2 bg-slate-800 hover:bg-sky-100 hover:text-sky-900 border-b last:border-none border-slate-600 transition-all duration-300 ease-in-out">
                        <span
                            if download.Status == "Complete" {
                                class="mx-2 text-xs px-2 py-1 rounded-full bg-green-600"
                            } else if download.Status == "Error" {
                                class="mx-2 text-xs px-2 py-1 rounded-full bg-red-600"
                            } else {
                                class="mx-2 text-xs px-2 py-1 rounded-full bg-blue-600"
                            }
                        >{download.Status}</span>
                        <span>{download.Name}</span> 
                    </li>
                }
            } else {
                <li class="px-4 py-2 border border-slate-600 border-dashed rounded overflow-hidden shadow-md">
                    <span>No Downloads</span>
                </li>
            }
        </ul>
    </div>
}


templ NewDownload() {
    <div id="modal" hx-get="/discard" hx-target="#modal" hx-swap="delete" hx-trigger="click target:#modal" class="flex overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full backdrop-blur-sm">
        <div id="modal-content" class="relative p-4 w-full max-w-md max-h-full">
            <!-- Modal content -->
            <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                <!-- Modal header -->
                <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600">
                    <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                        Add Download by InfoHash
                    </h3>
                    <button hx-get="/discard" hx-target="#modal" hx-swap="delete"  type="button" class="end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white">
                        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                        </svg>
                        <span class="sr-only">Close</span>
                    </button>
                </div>
                <!-- Modal body -->
                <div class="p-4 md:p-5">
                    <form class="space-y-4" hx-post="/downloads" hx-target="#modal" hx-swap="delete">
                        <div>
                            <label for="hash" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
                                InfoHash
                            </label>
                            <input name="hash" id="hash" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" required></input>
                        </div>
                        <button type="submit" class="w-full text-white text-center px-4 py-2 bg-blue-600 hover:bg-sky-100 hover:text-sky-900 border border-slate-600 rounded overflow-hidden shadow-md">
                            Add
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

// templ DownloadEditPage(download torrent.Torrent) {
//     @page("Download Editor", fmt.Sprintf("Downloads > %s", download.Title), "Edit this download") {
//         <div>
//             <div class="flex flex-col">
//                 <label for="title" class="text-xs mb-1">Title</label>
//                 <input hx-post={"/edit/" + download.Id} type="text" name="title" id="title" value={ download.Title } class="bg-slate-800 border border-slate-600 rounded px-2 py-1 mb-4" />
//             </div>
//             <div class="flex flex-col">
//                 <label for="description" class="text-xs mb-1">Description</label>
//                 <textarea hx-post={"/edit/" + download.Id} name="description" id="description" class="bg-slate-800 border border-slate-600 rounded px-2 py-1 mb-4">{ download.Description }</textarea>
//             </div>
//         </div>
//     }
// }